stages:
  - test
  - build
  - docs

variables:
  UV_VERSION: 0.6.3
  PYTHON_VERSION: 3.11
  BASE_LAYER: bookworm-slim
  # GitLab CI creates a separate mountpoint for the build directory,
  # so we need to copy instead of using hard links.
  UV_LINK_MODE: copy

# Cache dependencies to speed up subsequent runs
cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - target
    - .cargo

lint-code:
  stage: test
  image: rust:latest
  script:
    - rustup component add clippy
    - cargo clippy -- -D warnings

# Run tests for the Rust project
test:
  stage: test
  image: rust:latest
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
  coverage: '/\d+\.\d+% coverage, /'
  before_script:
    - cargo install cargo-tarpaulin
  script:
    - cargo test
    - cargo tarpaulin --force-clean --ignore-tests --verbose --engine llvm --fail-under=100 --out xml

# Build the Rust project
build:rust:
  stage: build
  image: rust:latest
  script:
    - cargo build --release --no-default-features
  artifacts:
    paths:
      - target/release

# Build the Python project
build:python:
  stage: build
  image: ghcr.io/astral-sh/uv:$UV_VERSION-python$PYTHON_VERSION-$BASE_LAYER
  before_script:
    - apt-get update && apt-get install -y curl build-essential
    - curl https://sh.rustup.rs -sSf | sh -s -- -y
    - . "$HOME/.cargo/env"
    - uv sync --frozen
  script:
    - source "$HOME/.cargo/env" # Ensure Rust tools are available
    - export PATH="$HOME/.cargo/bin:$PATH" # Add Cargo binaries to PATH
    - uv pip install maturin # Check if maturin is installed
    - uv pip list # Check if maturin is installed
    - pip install maturin # Check if maturin is installed
    - pip list # Check if maturin is installed
    - which maturin # Check if maturin is in the PATH
    - maturin build --release
  artifacts:
    paths:
      - target/wheels

# Generate documentation
pages:
  stage: docs
  image: rust:latest
  script:
    - cargo doc --no-deps
    - mv target/doc public
    - echo '<meta http-equiv=refresh content="0; url=doip_definitions/index.html">' > public/index.html
  artifacts:
    paths:
      # The folder that contains the files to be exposed at the Page URL
      - public
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
